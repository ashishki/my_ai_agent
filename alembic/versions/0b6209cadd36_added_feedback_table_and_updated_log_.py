"""Added Feedback table and updated log models

Revision ID: 0b6209cadd36
Revises: 927600181932
Create Date: 2025-02-20 16:11:24.308432

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0b6209cadd36'
down_revision: Union[str, None] = '927600181932'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('error_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.String(), nullable=True),
    sa.Column('endpoint', sa.String(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.Column('data', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('stack_trace', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_error_logs_id'), 'error_logs', ['id'], unique=False)
    op.create_table('feedbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedbacks_id'), 'feedbacks', ['id'], unique=False)
    op.add_column('logs', sa.Column('request_id', sa.String(), nullable=True))
    op.add_column('logs', sa.Column('duration', sa.Float(), nullable=True))
    op.add_column('logs', sa.Column('status', sa.String(), nullable=True))
    op.add_column('logs', sa.Column('error_message', sa.String(), nullable=True))
    op.alter_column('logs', 'endpoint',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('logs', 'data',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('logs', 'model',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('logs', 'response',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_unique_constraint(None, 'logs', ['request_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'logs', type_='unique')
    op.alter_column('logs', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('logs', 'response',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('logs', 'model',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('logs', 'data',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('logs', 'endpoint',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('logs', 'error_message')
    op.drop_column('logs', 'status')
    op.drop_column('logs', 'duration')
    op.drop_column('logs', 'request_id')
    op.drop_index(op.f('ix_feedbacks_id'), table_name='feedbacks')
    op.drop_table('feedbacks')
    op.drop_index(op.f('ix_error_logs_id'), table_name='error_logs')
    op.drop_table('error_logs')
    # ### end Alembic commands ###
